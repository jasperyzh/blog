---
import Layout from "../layouts/Layout.astro";
import Link from "../layouts/Link.astro";

// testing astro within /404
import Debug from "astro/components/Debug.astro";
import { Code } from "astro/components";
const helloworld = "hello world";
---

<Layout
  title="404 Page Not Found"
  main_classList={[
    "tw-h-100 tw-flex tw-items-center tw-justify-center tw-flex-col tw-text-center",
  ]}
>
  <section class="404__content">
    <h1 class="text-5xl my-4">/404notfound/</h1>
    <Link
      href="/"
      text="Back [Primary Link style]"
      classes="tw-mx-1 tw-my-4"
      style="primary"
    />
    <Link
      href="/"
      text="Back [Secondary Link style]"
      classes="tw-mx-1 tw-my-4"
      style="secondary"
    />
  </section>

  <section id="astro-test">
    <h1>AstroJs notes/tips/hints</h1>

    <!-- Syntax highlight some JavaScript code. -->
    <Code code={`const foo = 'bar';`} lang="js" />

    <!-- <Prism lang="js" code={`const foo = 'bar';`} /> -->
    <Debug {helloworld} />

    <div class="tw-container tw-mx-auto">
      <h2 class="h4">Template Directives</h2>
      <ul>
        <li>
          Include a colon : in its name, using the form X:Y (ex: client:load).
        </li>
        <li>
          Be visible to the compiler (ex: {"<X {...attr}>"} would not work if attr
          contained a directive).
        </li>
        <hr />
        <li>Common Directives</li>
        <li>Client Directives</li>
        <li>Script & Style Directives</li>
        <li>Advanced Directives: is:raw</li>
      </ul>
      <!-- <pre>{JSON.stringify(item, null, 2)}</pre> -->
      <!-- <Debug {import.meta.env} /> -->
      <pre>
<a href="https://docs.astro.build/en/reference/api-reference/"><b>Runtime API</b></a>
Received a <b>{Astro.request.method}</b> request to <b>"{Astro.request.url}"</b>
Received request headers: <code>{JSON.stringify(Object.fromEntries(Astro.request.headers))}</code>
The current URL is: {Astro.url}
The current URL pathname is: {Astro.url.pathname}
The current URL origin is: {Astro.url.origin}
    </pre>
    </div>

    <hr />

    <h2>Generate SVG with ChatGPT</h2>

    <p>jy: generate a svg of a bird</p>
    <p>
      ai: Sorry, but I am not capable of generating images or other visual
      content. I am a text-based AI trained to assist with a wide range of
      tasks, but generating images is not one of them.
    </p>
    <figure>
      <figcaption>
        <p>
          jy: can you give an example of simple SVG code that creates a tree?
        </p>
        <p>
          ai: Sure, here is an example of simple SVG code that creates a tree:
        </p>
      </figcaption>
      <svg width="400" height="200">
        <rect
          x="50"
          y="20"
          rx="20"
          ry="20"
          width="150"
          height="150"
          style="fill:green;stroke:black;stroke-width:5;opacity:0.5"></rect>
        <circle cx="200" cy="100" r="80" fill="orange"></circle>
      </svg>
    </figure>

    <figure>
      <svg width="100" height="100">
        <path d="M50 10 L10 90 L90 90 Z" stroke="black" fill="transparent"
        ></path>
      </svg>
      <figcaption>
        <p>can you give an example of simple SVG code that creates a ai?</p>
      </figcaption>
    </figure>

    <figure>
      <svg width="100" height="100">
        <rect x="25" y="5" width="50" height="90" fill="green"></rect>
        <circle cx="50" cy="30" r="20" fill="brown"></circle>
      </svg>

      <svg width="100" height="100">
        <rect x="25" y="5" width="50" height="90" fill="red"></rect>
        <circle cx="50" cy="30" r="20" fill="brown"></circle>
      </svg>
      <figcaption>
        <p>can you change the example with different fill color?</p>
      </figcaption>
    </figure>

    <figure>
      <svg
        width="200"
        height="200"
        viewBox="0 0 200 200"
        xmlns="http://www.w3.org/2000/svg"
      >
        <rect x="0" y="0" width="200" height="200" fill="#E6E6E6"></rect>
        <circle cx="100" cy="100" r="80" fill="#F8F8F8"></circle>
        <path d="M100,20 a80,80 0 1,0 0,1 z" fill="#B4B4B4"></path>
        <circle cx="75" cy="75" r="20" fill="#FFFFFF"></circle>
        <circle cx="125" cy="75" r="20" fill="#FFFFFF"></circle>
        <path
          d="M100,100 a20,20 0 0,1 -20,-20"
          fill="none"
          stroke="#000000"
          stroke-width="4"></path>
      </svg>
      <figcaption>
        <p>can you give an svg example with a portrait of a man?</p>
      </figcaption>
    </figure>
  </section>
</Layout>
